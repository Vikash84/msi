#!/usr/bin/env bash

## looks for a results.tsv.gz file in the current folder
def_file=results.tsv.gz

function usage {
    echo "Usage: msi_display_report  [options]  ";
    echo "Options:"
    echo " -P port : by default it will pick a random port";
    echo " -I ip : ip address where the server will listen for connections";
    echo " -n report name : report name";
    echo " -t tsv_file : tsv file generated by msi";
    echo " -h : this help";
}

ifile=$def_file
PORT=
HOST=
REP_NAME=
DEBUG=0

while getopts "t:P:I:n:h"  Option
do
    case $Option in
	t) ifile=$OPTARG;;
	P) PORT=$OPTARG;;
	I) HOST=$OPTARG;;
	n) REP_NAME=" - $OPTARG";;
	d) DEBUG=1;;
	h ) usage; exit;;
    esac
done


## We should provide the full path to shiny
ifile=`readlink -f $ifile`
echo "Looking for $ifile"
if [ ! -e $ifile ]; then
    echo "ERROR: $ifile not found"
    exit 1
fi

## R markdown file should be in the same folder as the msi_display_script
path2script=$(dirname $BASH_SOURCE)

## check if .RMD is found
RMD_FILE="$path2script/../template/dashboard.Rmd"
if [ ! -e  $RMD_FILE ]; then
    echo "ERROR: unable to file report template $RMD_FILE"
    exit 1
fi

## allow some options to be overridden
if [ "$PORT-" == "-" ]; then
  PORT=NULL
fi
if [ "$HOST-" == "-" ]; then
  HOST="127.0.0.1"
fi

## run the app
R --vanilla  <<EOF
library(rmarkdown)
library(flexdashboard)
library(shiny)

ifile<-"$ifile"
# simple invocation
rmarkdown::run(file="$RMD_FILE",shiny_args = list("launch.browser"=TRUE, port=$PORT, host="$HOST"),render_args=list(params=list(set_title=paste0("WIMS ","$REP_NAME"))))
EOF

